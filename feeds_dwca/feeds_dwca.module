<?php

include_once ('feeds_dwca.features.inc');

/**
 * Implementation of hook_feeds_plugins().
 */
function feeds_dwca_feeds_plugins() {
  $info = array();
  $info['DwCAParser'] = array(
    'name' => 'DwC-A Parser',
    'description' => 'Parses occurrence.txt file extracted from a DwC-A file.',
    'handler' => array(
      'parent' => 'FeedsParser', // A plugin needs to derive either directly or indirectly from FeedsFetcher, FeedsParser or FeedsProcessor.
      'class' => 'DwCAParser',
      'file' => 'DwCAParser.inc',
      'path' => drupal_get_path('module', 'feeds_dwca') . '/includes',
    ),
  );
  $info['DwCALocationProcessor'] = array(
    'name' => 'DwC-A Location Processor',
    'description' => 'Process a parsed DwC-A file.',
    'handler' => array(
      'parent' => 'FeedsProcessor', // A plugin needs to derive either directly or indirectly from FeedsFetcher, FeedsParser or FeedsProcessor.
      'class' => 'DwCALocationProcessor',
      'file' => 'DwCALocationProcessor.inc',
      'path' => drupal_get_path('module', 'feeds_dwca') . '/includes',
    ),
  );

  $info['DwCAObservationProcessor'] = array(
      'name' => 'DwC-A Observation Processor',
      'description' => 'Process a parsed DwC-A file.',
      'handler' => array(
          'parent' => 'FeedsProcessor', // A plugin needs to derive either directly or indirectly from FeedsFetcher, FeedsParser or FeedsProcessor.
          'class' => 'DwCAObservationProcessor',
          'file' => 'DwCAObservationProcessor.inc',
          'path' => drupal_get_path('module', 'feeds_dwca') . '/includes',
      ),
  );
  return $info;
}

function feeds_dwca_enable() {
  //clear the cache to display in Feeds as available plugin.
  cache_clear_all('plugins:feeds:plugins', 'cache');
}

/**
 * Implementation of hook_silver
 */
function feeds_dwca_silver() {
  return array(
    array(
      'type' => 'Nodes',
      'name' => 'Darwin Core Archive Import',
      'access arguments' => array(
        'administer feeds'
      ),
      'form_id' => 'feeds_dwca_primary_form'
    )
  );
}